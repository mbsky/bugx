<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section type="Bugx.Web.Configuration.XmlSectionHandler, Bugx.Web" name="bugx" />
  </configSections>
  <bugx xmlns="http://www.wavenet.be/bugx/web/configuration.xsd">
    <dataToSave>All</dataToSave>
    <maxErrorReportingPerMinute>5</maxErrorReportingPerMinute>
    <filters>
      <!-- Sample of error filter: ignore all error id wich starts with 2267275466 >
      <filter>^2267275466</filter-->
    </filters>    
  </bugx>
	<appSettings/>
	<connectionStrings/>
	<system.web>
		<pages enableViewStateMac="false" enableEventValidation="false"/>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="false">
			<assemblies>
				<add assembly="System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/></assemblies></compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<httpModules>
			<add name="ErrorModule" type="Bugx.Web.ErrorModule, Bugx.Web"/>
			<!--add name="BugxTalkModule" type="Bugx.Talk.Bot, Bugx.Talk"/-->
		</httpModules>
    <httpHandlers>
      <add verb="GET" type="Bugx.Report.Generator, Bugx.Report" validate="true" path="*.bugx.axd"/>
    </httpHandlers>
		<authentication mode="Windows"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
	</system.web>
</configuration>
